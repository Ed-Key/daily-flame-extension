{"version":3,"file":"auth.js","mappingssources":["webpack://dailybread/./src/auth/auth.ts"],"sourcesContent":["\"use strict\";\n// Auth page communicates with background script for Firebase authentication\n// DOM elements\nconst authContent = document.getElementById('auth-content');\nconst loadingContent = document.getElementById('loading-content');\nconst successContent = document.getElementById('success-content');\nconst errorContent = document.getElementById('error-content');\nconst errorMessage = document.getElementById('error-message');\nconst googleSignInBtn = document.getElementById('google-signin-btn');\nconst emailForm = document.getElementById('email-signin-form');\nconst showSignupLink = document.getElementById('show-signup');\nconst retryBtn = document.getElementById('retry-btn');\n// State\nlet isSignUpMode = false;\n// Show/hide content sections\nfunction showSection(section) {\n    authContent?.classList.toggle('hidden', section !== 'auth');\n    loadingContent?.classList.toggle('hidden', section !== 'loading');\n    successContent?.classList.toggle('hidden', section !== 'success');\n    errorContent?.classList.toggle('hidden', section !== 'error');\n}\n// Handle successful sign-in\nfunction handleSuccess() {\n    showSection('success');\n    // Close tab after 2 seconds\n    setTimeout(() => {\n        window.close();\n    }, 2000);\n}\n// Handle sign-in error\nfunction handleError(error) {\n    console.error('Auth error:', error);\n    let message = 'An error occurred during sign-in. Please try again.';\n    // Map Firebase error codes to user-friendly messages\n    switch (error.code) {\n        case 'auth/popup-closed-by-user':\n            message = 'Sign-in cancelled. Please try again.';\n            break;\n        case 'auth/popup-blocked':\n            message = 'Sign-in popup was blocked. Please enable popups and try again.';\n            break;\n        case 'auth/user-cancelled':\n            message = 'Sign-in was cancelled. Please try again.';\n            break;\n        case 'auth/redirect-cancelled-by-user':\n            message = 'Sign-in was cancelled. Please try again.';\n            break;\n        case 'auth/redirect-operation-pending':\n            message = 'Another sign-in attempt is in progress. Please wait.';\n            break;\n        case 'auth/user-not-found':\n            message = 'No account found with this email address.';\n            break;\n        case 'auth/wrong-password':\n            message = 'Incorrect password. Please try again.';\n            break;\n        case 'auth/invalid-email':\n            message = 'Please enter a valid email address.';\n            break;\n        case 'auth/email-already-in-use':\n            message = 'An account with this email already exists.';\n            break;\n        case 'auth/weak-password':\n            message = 'Password should be at least 6 characters.';\n            break;\n        case 'auth/invalid-credential':\n            message = 'Invalid email or password.';\n            break;\n        case 'auth/account-exists-with-different-credential':\n            message = 'An account already exists with the same email address but different sign-in credentials.';\n            break;\n    }\n    if (errorMessage) {\n        errorMessage.textContent = message;\n    }\n    showSection('error');\n}\n// Google Sign-In\nasync function signInWithGoogle() {\n    try {\n        showSection('loading');\n        // Send auth request to background script\n        chrome.runtime.sendMessage({\n            action: 'openAuthTab',\n            authAction: 'signInWithGoogle',\n            authData: {}\n        }, (response) => {\n            if (chrome.runtime.lastError) {\n                handleError({ message: chrome.runtime.lastError.message });\n            }\n            else if (response.success) {\n                handleSuccess();\n            }\n            else {\n                handleError(response.error);\n            }\n        });\n    }\n    catch (error) {\n        handleError(error);\n    }\n}\n// Email Sign-In/Sign-Up\nasync function handleEmailAuth(email, password) {\n    try {\n        showSection('loading');\n        const authAction = isSignUpMode ? 'signUpWithEmail' : 'signInWithEmail';\n        // Send auth request to background script\n        chrome.runtime.sendMessage({\n            action: 'openAuthTab',\n            authAction: authAction,\n            authData: { email, password }\n        }, (response) => {\n            if (chrome.runtime.lastError) {\n                handleError({ message: chrome.runtime.lastError.message });\n            }\n            else if (response.success) {\n                if (isSignUpMode && response.needsVerification) {\n                    // Show custom success message for sign-up\n                    if (successContent) {\n                        const successText = successContent.querySelector('p');\n                        if (successText) {\n                            successText.textContent = 'Account created! Please check your email to verify your account.';\n                        }\n                    }\n                }\n                handleSuccess();\n            }\n            else {\n                // Special handling for email verification required\n                if (response.error && response.error.code === 'auth/email-not-verified') {\n                    if (errorMessage) {\n                        errorMessage.textContent = response.error.message;\n                    }\n                    showSection('error');\n                }\n                else {\n                    handleError(response.error);\n                }\n            }\n        });\n    }\n    catch (error) {\n        handleError(error);\n    }\n}\n// Event listeners\ngoogleSignInBtn?.addEventListener('click', signInWithGoogle);\nemailForm?.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    handleEmailAuth(email, password);\n});\n// Toggle between sign-in and sign-up modes\nfunction toggleAuthMode(e) {\n    e.preventDefault();\n    isSignUpMode = !isSignUpMode;\n    // Update UI for sign-up mode\n    const h2 = authContent?.querySelector('h2');\n    const submitBtn = emailForm?.querySelector('button[type=\"submit\"]');\n    if (isSignUpMode) {\n        if (h2)\n            h2.textContent = 'Create an Account';\n        if (submitBtn)\n            submitBtn.textContent = 'Sign up with Email';\n        if (showSignupLink && showSignupLink.parentElement) {\n            showSignupLink.parentElement.innerHTML = 'Already have an account? <a href=\"#\" id=\"show-signup\">Sign in</a>';\n            // Re-attach event listener\n            document.getElementById('show-signup')?.addEventListener('click', toggleAuthMode);\n        }\n    }\n    else {\n        if (h2)\n            h2.textContent = 'Sign in to Daily Bread';\n        if (submitBtn)\n            submitBtn.textContent = 'Sign in with Email';\n        if (showSignupLink && showSignupLink.parentElement) {\n            showSignupLink.parentElement.innerHTML = 'Don\\'t have an account? <a href=\"#\" id=\"show-signup\">Sign up</a>';\n            // Re-attach event listener\n            document.getElementById('show-signup')?.addEventListener('click', toggleAuthMode);\n        }\n    }\n}\nshowSignupLink?.addEventListener('click', toggleAuthMode);\nretryBtn?.addEventListener('click', () => {\n    showSection('auth');\n});\n// Check if already signed in when page loads\nchrome.runtime.sendMessage({\n    action: 'auth',\n    authAction: 'getCurrentUser',\n    authData: {}\n}, (response) => {\n    if (response && response.success && response.user) {\n        // Already signed in, close the tab\n        handleSuccess();\n    }\n});\n"],"names":[],"sourceRoot":""}